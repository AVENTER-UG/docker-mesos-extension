{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { ThemeProvider, useMediaQuery } from '@mui/material';\nimport { createDarkTheme, createLightTheme } from './themes';\nexport function DockerMuiThemeProvider(_ref) {\n  let {\n    disableDarkTheme,\n    children\n  } = _ref;\n  const useDarkTheme = useMediaQuery('(prefers-color-scheme: dark)') && !disableDarkTheme;\n  const theme = useMemo(() => useDarkTheme ? createDarkTheme() : createLightTheme(), [useDarkTheme]);\n  return React.createElement(ThemeProvider, {\n    theme: theme\n  }, children);\n}","map":{"version":3,"names":["React","useMemo","ThemeProvider","useMediaQuery","createDarkTheme","createLightTheme","DockerMuiThemeProvider","disableDarkTheme","children","useDarkTheme","theme","createElement"],"sources":["/home/andreas/Projekte/docker/docker-mesos-extension/ui/node_modules/@docker/docker-mui-theme/dist/DockerMuiThemeProvider.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ThemeProvider, useMediaQuery } from '@mui/material';\nimport { createDarkTheme, createLightTheme } from './themes';\nexport function DockerMuiThemeProvider({ disableDarkTheme, children }) {\n    const useDarkTheme = useMediaQuery('(prefers-color-scheme: dark)') && !disableDarkTheme;\n    const theme = useMemo(() => (useDarkTheme ? createDarkTheme() : createLightTheme()), [useDarkTheme]);\n    return React.createElement(ThemeProvider, { theme: theme }, children);\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,UAAlD;AACA,OAAO,SAASC,sBAAT,OAAgE;EAAA,IAAhC;IAAEC,gBAAF;IAAoBC;EAApB,CAAgC;EACnE,MAAMC,YAAY,GAAGN,aAAa,CAAC,8BAAD,CAAb,IAAiD,CAACI,gBAAvE;EACA,MAAMG,KAAK,GAAGT,OAAO,CAAC,MAAOQ,YAAY,GAAGL,eAAe,EAAlB,GAAuBC,gBAAgB,EAA3D,EAAgE,CAACI,YAAD,CAAhE,CAArB;EACA,OAAOT,KAAK,CAACW,aAAN,CAAoBT,aAApB,EAAmC;IAAEQ,KAAK,EAAEA;EAAT,CAAnC,EAAqDF,QAArD,CAAP;AACH"},"metadata":{},"sourceType":"module"}